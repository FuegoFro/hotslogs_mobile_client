import 'package:cached_network_image/cached_network_image.dart';import 'package:flutter/material.dart';import 'package:hotslogs_mobile_client/talent_builds.dart';class HeroDetailsState extends State<HeroDetails> {  List<TalentBuild> _talentBuilds;  @override  void initState() {    _loadTalentBuild(widget.heroName);  }  void _loadTalentBuild(String heroName) async {    final talentBuilds = await getBuildsForHero(heroName);    setState(() {      _talentBuilds = talentBuilds;    });  }  @override  Widget build(BuildContext context) => Scaffold(        appBar: AppBar(          title: Text("Talent builds - ${widget.heroName}"),        ),        body: _buildBody(),      );  Widget _buildBody() {    if (_talentBuilds == null) {      return Center(child: CircularProgressIndicator());    } else if (_talentBuilds.length == 0) {      return Center(        child: Padding(          padding: EdgeInsets.all(8.0),          child: Text(            "No talent builds for Hero. It's possible there was recently a "                "patch, which would cause data to be limited.",            style: TextStyle(color: Colors.grey),            textAlign: TextAlign.center,          ),        ),      );    } else {      return ListView(        children: _talentBuilds.map(_buildListItem).toList(),      );    }  }  Widget _buildListItem(TalentBuild talentBuild) => Padding(        padding: EdgeInsets.symmetric(vertical: 8.0),        child: Row(          mainAxisAlignment: MainAxisAlignment.spaceEvenly,          crossAxisAlignment: CrossAxisAlignment.start,          children: talentBuild              .mapTalents((talent) => _buildTalentCell(talent))              .toList(),        ),      );  Widget _buildTalentCell(Talent talent) => Expanded(        child: Padding(          padding: EdgeInsets.symmetric(horizontal: 8.0),          child: Column(            children: <Widget>[              CachedNetworkImage(                imageUrl: talent.imageUrl,              ),              Padding(                padding: EdgeInsets.only(top: 4.0),                child: Text(                  talent.name,                  style: TextStyle(fontSize: 8.0),                  textAlign: TextAlign.center,                ),              ),            ],          ),        ),      );}class HeroDetails extends StatefulWidget {  final String heroName;  const HeroDetails(this.heroName, {Key key}) : super(key: key);  @override  State<HeroDetails> createState() {    return HeroDetailsState();  }}